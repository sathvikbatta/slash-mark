<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <style>
        body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
}

.container {
    max-width: 400px;
    margin: 0 auto;
    text-align: center;
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.5); /* Set the background color to be transparent */
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Adjust the alpha value here for the box shadow transparency */
    margin-top: 105px;
}

h1 {
    font-size: 24px;
}

input[type="text"] {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
}

button {
    background-color: #007BFF;
    color: #fff;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

.weather-info {
    margin-top: 20px;
}
    </style>
</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <input type="text" id="locationInput" placeholder="Enter a city">
        <button id="searchButton">Search</button>
        <div class="weather-info">
            <h2 id="location"></h2>
            <p id="temperature"></p>
            <p id="description"></p>
        </div>
    </div>
    <script>// src/components/Weather.js
        import React, { useState } from 'react';
        import axios from 'axios';
        
        const Weather = () => {
            const [location, setLocation] = useState('');
            const [weatherData, setWeatherData] = useState(null);
            const [error, setError] = useState(null);
        
            const handleLocationChange = (e) => {
                setLocation(e.target.value);
            };
        
            const fetchWeatherData = async () => {
                try {
                    const apiKey = 'YOUR_API_KEY'; // Replace with your actual API key
                    const currentWeather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${apiKey}`);
                    const forecastWeather = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${apiKey}`);
        
                    setWeatherData({
                        current: currentWeather.data,
                        forecast: forecastWeather.data.list.slice(0, 5), // Get the next 5 days
                    });
                    setError(null);
                } catch (err) {
                    setError('Unable to fetch weather data. Please try again.');
                }
            };
        
            const handleSubmit = (e) => {
                e.preventDefault();
                fetchWeatherData();
            };
        
            return (
                <div>
                    <h1>Weather Forecast</h1>
                    <form onSubmit={handleSubmit}>
                        <input
                            type="text"
                            value={location}
                            onChange={handleLocationChange}
                            placeholder="Enter your location"
                            required
                        />
                        <button type="submit">Get Weather</button>
                    </form>
                    {error && <p>{error}</p>}
                    {weatherData && (
                        <div>
                            <h2>Current Weather in {weatherData.current.name}</h2>
                            <p>Temperature: {weatherData.current.main.temp}°C</p>
                            <p>Weather: {weatherData.current.weather[0].description}</p>
        
                            <h2>5-Day Forecast</h2>
                            <ul>
                                {weatherData.forecast.map((item, index) => (
                                    <li key={index}>
                                        {new Date(item.dt_txt).toLocaleDateString()}: {item.main.temp}°C, {item.weather[0].description}
                                    </li>
                                ))}
                            </ul>
                        </div>
                    )}
                </div>
            );
        };
        
        export default Weather;
        </script>
</body>
</html>
